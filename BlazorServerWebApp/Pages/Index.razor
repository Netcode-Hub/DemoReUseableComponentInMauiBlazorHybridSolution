@page "/"
@using DataSourceSharedLibrary.Models
@using DataSourceSharedLibrary.Services
@using SharedComponents.Components
@inject IJSRuntime js

<div class="container-fluid">
    <div class="row">
        <div class="col-md-8">

            <ProductListPage Products="ProductService.Products"
                             ShowProductList="ShowProductList"
                             HandleAddProductBtnEventCallBack="AddProduct"
                             HandleEditProductEventCallBack="EditProduct"
                             HandleDeleteProductEventCallBack="DeleteProduct">
            </ProductListPage>

            <AddProductPage ShowAddProduct="ShowAddProduct"
                            HandleSubmitProductEventCallBack="SaveProduct">
            </AddProductPage>

            <UpdateProductPage ProductModel="ProductModel"
                               ShowEditProduct="ShowEditProduct"
                               HandleSubmitProductEventCallBack="UpdateProduct">

            </UpdateProductPage>
        </div>
    </div>
</div>

@code{
    public bool ShowProductList { get; set; }
    public bool ShowAddProduct { get; set; }
    public bool ShowEditProduct { get; set; }

    public Product ProductModel { get; set; } = new();

    protected override void OnInitialized()
    {
        RestViews();
        ShowProductList = true;
    }



    // Add Product
    private void AddProduct()
    {
        RestViews();
        ShowAddProduct = true;
    }

    private void SaveProduct(Product model)
    {
        int GenerateId = 0;
        var getlastAddedProduct = ProductService.Products.LastOrDefault();
        if (getlastAddedProduct is null)
            GenerateId++;
        else
            GenerateId = getlastAddedProduct.Id + 1;

        model.Id = GenerateId;
        ProductService.AddProduct(model);
        RestViews();
        ShowProductList = true;
    }


    //Edit Product
    private void EditProduct(Product model)
    {
        ProductModel = new Product();
        ProductModel = model;
        RestViews();
        ShowEditProduct = true;

    }

    private void UpdateProduct(Product model)
    {
        ProductService.UpdateProduct(model);
        RestViews();
        ShowProductList = true;
    }

    //Delete Product
    private async void DeleteProduct(int id)
    {
        bool confirm = await js.InvokeAsync<bool>("confirm", "Are you sure?");
        if (confirm)
        {
            ProductService.DeleteProduct(id);
            RestViews();
            ShowProductList = true;
            StateHasChanged();
        }

    }

    //General Method
    private void RestViews()
    {
        ShowProductList = false;
        ShowAddProduct = false;
        ShowEditProduct = false;
    }
}

